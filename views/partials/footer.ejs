<!--Footer-->
<footer class="bg-light text-lg-start">
  <!-- <div class="py-4 text-center">
        <a role="button" class="btn btn-primary btn-lg m-2"
            href="https://www.youtube.com/channel/UC5CF7mLQZhvx8O5GODZAhdA" rel="nofollow" target="_blank">
            Learn Bootstrap 5
        </a>
        <a role="button" class="btn btn-primary btn-lg m-2" href="https://mdbootstrap.com/docs/standard/"
            target="_blank">
            Download MDB UI KIT
        </a>
    </div>

    <hr class="m-0" />

    <div class="text-center py-4 align-items-center">
        <p>Follow MDB on social media</p>
        <a href="https://www.youtube.com/channel/UC5CF7mLQZhvx8O5GODZAhdA" class="btn btn-primary m-1" role="button"
            rel="nofollow" target="_blank">
            <i class="fab fa-youtube"></i>
        </a>
        <a href="https://www.facebook.com/mdbootstrap" class="btn btn-primary m-1" role="button" rel="nofollow"
            target="_blank">
            <i class="fab fa-facebook-f"></i>
        </a>
        <a href="https://twitter.com/MDBootstrap" class="btn btn-primary m-1" role="button" rel="nofollow"
            target="_blank">
            <i class="fab fa-twitter"></i>
        </a>
        <a href="https://github.com/mdbootstrap/mdb-ui-kit" class="btn btn-primary m-1" role="button" rel="nofollow"
            target="_blank">
            <i class="fab fa-github"></i>
        </a>
    </div> -->

  <!-- Copyright -->
  <!-- <div class="text-center p-3" style="background-color: rgba(0, 0, 0, 0.2);">
        Â© 2021 Copyright:
        <a class="text-dark" href="#">JU E-Cell</a>
    </div> -->
  <!-- Copyright -->
</footer>
<!--Footer-->

<!-- MDB -->
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/3.6.0/mdb.min.js"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
<script src="https://code.jquery.com/jquery-3.5.0.js"></script>


<script src="/socket.io/socket.io.js"></script>
<script>
  $(document).ready(function() {
    var socket = io();

    // $("#add_status").click(function () {
    //     socket.emit('status added', $("#comment").val());
    // });
    // socket.on("refresh feed", function (msg) {
    //     $("#tick_messages1").text(msg.data);
    // });

    socket.on("update prices", function(quotes) {

      quotes.quoteList.forEach(quote => {
        var marketPriceElementID = quote.symbol.concat("-marketPrice");
        var marketPriceChangeElementID = quote.symbol.concat("-marketPriceChange");
        var marketPriceChangePercentArrowElementID = quote.symbol.concat("-marketPriceChangePercentArrow");
        var marketPriceChangePercentElementID = quote.symbol.concat("-marketPriceChangePercent");
        var marketPriceChangePercentBadgeElementID = quote.symbol.concat("-marketPriceChangePercentBadge");

        var change = quote.marketPriceChange > 0 ? "+" +
          quote.marketPriceChange :
          quote.marketPriceChange;

        document.getElementById(marketPriceElementID).innerText = quote.marketPrice;
        document.getElementById(marketPriceChangeElementID).innerText = change;
        document.getElementById(marketPriceChangeElementID).className = "text-" + quote.badgeClassName;
        document.getElementById(marketPriceChangePercentArrowElementID).className = "fas fa-arrow-" + quote.arrowType;
        document.getElementById(marketPriceChangePercentElementID).innerText = quote.marketPriceChangePercent + "%";
        document.getElementById(marketPriceChangePercentBadgeElementID).className = "badge bg-" + quote.badgeClassName;
      });

    });

    socket.on("transaction successful", (transaction) => {
      const {
        id,
        ttype,
        symbol,
        name,
        atPrice,
        remainingBalance
      } = transaction;
      const transactionMessage = "Transaction successful : " + id + " - " + ttype +
        " " +
        name +
        "(" +
        symbol +
        ") at " +
        atPrice;
      notify(transactionMessage, ttype);
      document.getElementById(id + "-orderStatusBadge").classList.remove('bg-warning');
      document.getElementById(id + "-orderStatusBadge").classList.add('bg-success');
      document.getElementById(id + "-orderStatusBadge").innerText = "Complete";
      document.getElementById(id + "-orderID").innerText = id;
      document.getElementById("wallet-balance").innerText = remainingBalance;
    });

    socket.on("transaction rejected", (transaction) => {
      const {
        id,
        ttype,
        symbol,
        name,
        atPrice,
      } = transaction;
      //   const transactionMessage = "Transaction rejected : " + id + " - " + ttype +
      //     " " +
      //     name +
      //     "(" +
      //     symbol +
      //     ") at " +
      //     atPrice;
      const transactionMessage = "Insufficient Holdings";
      notify(transactionMessage, "sell");
      document.getElementById(id + "-orderStatusBadge").classList.remove('bg-warning');
      document.getElementById(id + "-orderStatusBadge").classList.add('bg-danger');
      document.getElementById(id + "-orderStatusBadge").innerText = "Rejected";
      document.getElementById(id + "-orderID").innerText = id;
    });

    socket.on("transaction queued", (transaction) => {
      const {
        id,
        ttype,
        symbol,
        name,
        quantity,
        lotSize,
        mode,
        atPrice,
        otype
      } = transaction;
      const transactionMessage = "Order submitted to exchange : " + id + " - " + ttype +
        " " +
        name +
        "(" +
        symbol +
        ") at " +
        atPrice;
      notify(transactionMessage, "queue");

      let orderTypeBadge = otype == "market" ? "<span class='badge bg-primary'>M</span>" : "<span class='badge bg-secondary'>L</span>";
      let transactionTypeBadge = ttype == "buy" ? "<span class='badge bg-success'>B</span>" : "<span class='badge bg-danger'>S</span>";

      $('#leaderboard-list').prepend("<div><a href='#' class='list-group-item list-group-item-action' aria-current='true'><div class='d-flex w-100 justify-content-between'><h6>" + name + "</h6><span id='" + id + "-orderStatusBadge' class='badge bg-warning' style='margin-bottom: 10px;'>Pending</span></div><div class='d-flex w-100 justify-content-between'><small>" + quantity + " @ &#8377;" + atPrice + "</small>" + orderTypeBadge + transactionTypeBadge + "<span class='badge bg-warning text-dark'>" + mode.toUpperCase() + "</span></div><div class='d-flex w-100 justify-content-between' style='padding-top: 10px;'><small>ID : </small><small id='" + id + "-orderID'></small></div></a></div>");
    });

    $('#buy-cnc').click(function() {
      let companyName = $('#orderForm-cnc-companyName').val();
      let companyCode = $('#orderForm-cnc-companyCode').val();
      let orderQuantity = $('#orderForm-cnc-quantity').val();
      let orderLotSize = $('#orderForm-cnc-lotSize').val();
      let orderPrice = $('#orderForm-cnc-price').val();
      let orderMode = "cnc";
      let transactionType = "buy";
      let orderType = "market";
      let walletBalance = document.getElementById("wallet-balance").innerText;
      let userID = document.getElementById("userID").value;

      if (document.getElementById('orderType-cnc-market').checked) {
        orderType = "market";
      }
      if (document.getElementById('orderType-cnc-limit').checked) {
        orderType = "limit";
      }

      if (orderQuantity * orderPrice > walletBalance) {
        notify("Insufficient Wallet Balance", "sell");
      } else {
        if (companyCode !== "Select stock") {
          socket.emit("transact", {
            ttype: transactionType,
            symbol: companyCode,
            name: companyName,
            quantity: orderQuantity,
            lotSize: orderLotSize,
            mode: orderMode,
            atPrice: orderPrice,
            otype: orderType,
            balance: walletBalance,
            userID: userID
          });
        }
      }
    });

    $('#sell-cnc').click(function() {
      let companyName = $('#orderForm-cnc-companyName').val();
      let companyCode = $('#orderForm-cnc-companyCode').val();
      let orderQuantity = $('#orderForm-cnc-quantity').val();
      let orderLotSize = $('#orderForm-cnc-lotSize').val();
      let orderPrice = $('#orderForm-cnc-price').val();
      let orderMode = "cnc";
      let transactionType = "sell";
      let orderType = "market";
      let walletBalance = document.getElementById("wallet-balance").innerText;
      let userID = document.getElementById("userID").value;
      if (document.getElementById('orderType-cnc-market').checked) {
        orderType = "market";
      }
      if (document.getElementById('orderType-cnc-limit').checked) {
        orderType = "limit";
      }

      if (companyCode !== "Select stock") {
        socket.emit("transact", {
          ttype: transactionType,
          symbol: companyCode,
          name: companyName,
          quantity: orderQuantity,
          lotSize: orderLotSize,
          mode: orderMode,
          atPrice: orderPrice,
          otype: orderType,
          balance: walletBalance,
          userID: userID
        });
      }

    });

    $('#buy-mis').click(function() {
      let companyName = $('#orderForm-mis-companyName').val();
      let companyCode = $('#orderForm-mis-companyCode').val();
      let orderQuantity = $('#orderForm-mis-quantity').val();
      let orderLotSize = $('#orderForm-mis-lotSize').val();
      let orderPrice = $('#orderForm-mis-price').val();
      let orderMode = "mis";
      let transactionType = "buy";
      let orderType = "market";

      if (document.getElementById('orderType-mis-market').checked) {
        orderType = "market";
      }
      if (document.getElementById('orderType-mis-limit').checked) {
        orderType = "limit";
      }
      if (orderQuantity * orderPrice > walletBalance) {
        notify("Insufficient Wallet Balance", "sell");
      } else {
        socket.emit("transact", {
          ttype: transactionType,
          symbol: companyCode,
          name: companyName,
          quantity: orderQuantity,
          lotSize: orderLotSize,
          mode: orderMode,
          atPrice: orderPrice,
          otype: orderType
        });
      }
    });

    $('#sell-mis').click(function() {
      let companyName = $('#orderForm-mis-companyName').val();
      let companyCode = $('#orderForm-mis-companyCode').val();
      let orderQuantity = $('#orderForm-mis-quantity').val();
      let orderLotSize = $('#orderForm-mis-lotSize').val();
      let orderPrice = $('#orderForm-mis-price').val();
      let orderMode = "mis";
      let transactionType = "sell";
      let orderType = "market";
      if (document.getElementById('orderType-mis-market').checked) {
        orderType = "market";
      }
      if (document.getElementById('orderType-mis-limit').checked) {
        orderType = "limit";
      }

      socket.emit("transact", {
        ttype: transactionType,
        symbol: companyCode,
        name: companyName,
        quantity: orderQuantity,
        lotSize: orderLotSize,
        mode: orderMode,
        atPrice: orderPrice,
        otype: orderType
      });
    });

    $('#orderType-cnc-limit').click(function() {
      $('#orderForm-cnc-price').removeAttr('disabled');
    });

    $('#orderType-cnc-market').click(function() {
      $('#orderForm-cnc-price').attr('disabled', 'true');
    });

    $('#orderType-mis-limit').click(function() {
      $('#orderForm-mis-price').removeAttr('disabled');
    });

    $('#orderType-mis-market').click(function() {
      $('#orderForm-mis-price').attr('disabled', 'true');
    });

  });
</script>

<script type="text/javascript">
  function reply_click(clicked_id, action) {
    var socket = io();
    var quoteSymbol = clicked_id.substring(0, clicked_id.indexOf("-"))
    var priceElement = quoteSymbol.concat("-marketPrice");
    var quoteNameElement = quoteSymbol.concat("-quoteName");
    var price = document.getElementById(priceElement).innerText;
    var quoteName = document.getElementById(quoteNameElement).innerText;
    const transactionQueueMessage = "Transaction queued : " + action +
      " " +
      quoteName +
      "(" +
      quoteSymbol +
      ") at " +
      price;
    notify(transactionQueueMessage, "queue");
    socket.emit("transact", {
      type: action,
      symbol: quoteSymbol,
      name: quoteName,
      atPrice: price
    });
    // $("#modalLaunch").click();
    // alert(price);
    // alert(action + " " + quoteName + " at " + price);
    // notify(action.concat(" ").concat(quoteName).concat(" at ").concat(price));
    // alert(quoteName);
  }

  function fillOrderForm(companyID) {
    document.getElementById("orderForm-cnc-companyName").value = document.getElementById(companyID + "-quoteName").innerText;
    document.getElementById("orderForm-cnc-price").value = document.getElementById(companyID + "-marketPrice").innerText;
    document.getElementById("orderForm-cnc-companyCode").value = companyID;
    document.getElementById("orderForm-mis-companyName").value = document.getElementById(companyID + "-quoteName").innerText;
    document.getElementById("orderForm-mis-price").value = document.getElementById(companyID + "-marketPrice").innerText;
    document.getElementById("orderForm-mis-companyCode").value = companyID;
    // alert(companyID);

  }
  // $("#hemhe").click(function () {
  //     alert(event.srcElement.id);
  // })
</script>

<!-- <script src="https://www.jsdelivr.com/package/npm/chart.js"></script> -->
<!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"> -->
</script>
<!-- <script>
    // var Chart = require('chart.js');
    var ctx = document.getElementById('myChart').getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
            datasets: [{
                label: '# of Votes',
                data: [12, 19, 3, 5, 2, 3],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script> -->

<script type="text/javascript">





</script>